                        SETUP
                        IDE

install android studio (IDE)
start new project -> phone and tablet -> empty activity  .....

                        SETUP 
                        AVD (emulator)

(in IDE, tools -> AVD Manager)
    create virtual device ->  phone, pixel 3 (must have play store!)
                              Q or ...?
                              add to name version (Q...)
                                advanced: enable device frame
                                                 keyboard input
                        SETUP 
                        phone

settings -> about device -> software info -> build number (switches to developer mode)
         -> developer options (on ?)
                                -> USB debug (on)

!!! to write code independantly from android:
        file -> create new -> kotlin file 

            fun main() { ... }

-------------------------------------------------------------------------------------------------
                                    DEVICE ORIENTATION 

manifests -> <activity ... android:screenOrientation="portrait"

--------------------------------------------------------------------------------------------------
                                        THEME

REMOVE TOP BAR 

    (manifests)   <activity ... android:theme="@style/NoTopBarTheme"      //custom theme


-------------------------------------------------------------------------------------------------
                                REMOVE STATUS BAR ON TOP 
(main...onCreate)

    window.decorView.systemUiVisibility = View.SYSTEM_UI_FLAG_FULLSCREEN

-------------------------------------------------------------------------------------------------
                                KEYBOARD APPEAR -> UI ADJUSTS 

(manifests) 

     <activity ... android:windowSoftInputMode="adjustResize" 

(res/values/styles) --- add new style, copy same items (default here)

    <style name="NoTopBarTheme" parent="Theme.AppCompat.Light.NoActionBar">
        <item name="colorPrimary">@color/colorPrimary</item>
        <item name="colorPrimaryDark">@color/colorPrimaryDark</item>
        <item name="colorAccent">@color/colorAccent</item>
    </style>

    !!! NoTopBarTheme is custom theme... parent="" (see docs)
----------------------------------------------------------------------------------------------
                                    MATERIAL DESIGN 

(gradle/build.gradle)

    dependencies { ... implementation 'com.google.android.material:material:1.0.0' }
            !!! sync

****************************************************************************************************
                            FOLDERS

app ->  java -> com.example.myproj  -> MainActivity.kt          //starting code
    ->  res  -> layout  ->  activity_main.xml                   //visually 

***************************************************************************************************
                                IDE 

1.  activity_main.xml  .... highlight text,  RT declared attributes -> text
                                             RB commot attributes -> textAppearance -> textSize - 21sp

***************************************************************************************************
                                REF TO el 

val myBtn = findViewById(R.id.buttonId) as Button            // import ...
val myTxt =                   textId       TextView          // import

    !!! myBtn.setOnClickListener {it: View!    }
    !!! myTxt.text = "lala"

!!! by importing Button can ref to it directly by id name:
    !!! buttonId.setOnClickListener { }

ACCESS ID 

    R.id.lala

    view.?id    -> returns id                           !!! view: TextView as arg of this fun
                                                            view: View?  as arg in setOnClickListener fun 

SET CSS 

    el-ui.textColor = .....

    view.setTextColor(Color.parseColor("#363A43"))      !!! view: TextView  as arg of this fun 

    view.setTypeface(view.typeface, Typeface.BOLD)

            !!! Typeface.DEFAULT

    view.background = ContextCompat.getDrawable(
            this@QuizQuestionsActivity,
            R.drawable.selected_option_border_bg
        )
        !!! res-drawable - selected_option_border_bg   (custom box) see styling.txt - CSS CLASS
    !!! view same as el-ui but view is participant of event
    
ACCESS IMG AND SET IMG 

    imgId.setImageResource(el.image)

    !!! el.image <- image: R.drawable.lala  (as part of ElModel)   --- lala.jpg

ACCESS EL IN ArrayList

     arr!!.get(i)


***************************************************************************************************
                                EVENTS

btnRef.setOnClickListener {it: View!   }

el-ui.setOnClickListener(this)

    !!! inside of class QuizQuestionsActivity : AppCompatActivity(), View.OnClickListener { ... }

-----------------------------------------------------------------------------
(MainActivity .... onCreate)

    el-ui.setOnClickListener { view ->
            clickDatePicker(view)
        }
 fun clickDatePicker(view: View) { ..... }  
                                    !!!  any dialogue (ex. Toast, DatePickerDialog ...) --- .show()  uses view:View

-------------------------------------------------------------------------------
override fun onCreate(...) { el-ui + EL }
override fun onClick(v: View?) {  .... }         !!! View is passed when el-ui clicked
    
    



----------------------------------------------------------------------------------------
GET ATTRS OF EL FROM el that is source of event  (ex. inside event listener fun, where view is passed)

    (view as Button).text               --- Button inherits from view

GET ATTRS OF EL (not source of event)

    elId.text

-----------------------------------------------------------------------------
ADD TEXT DYNAMICALLY

    <TextView ...id="@+id/someId"   />
        !!! no text attr 
    .kt  ---  someId.setText(str)

-----------------------   

!!! all non-event funs private
**************************************************************************************************
                                MESSAGES (ALERTS...)

Toast.makeText(this@MainActivity, "lalala", Toast.LENGTH_SHORT).show()

***************************************************************************************************
                                DATE

DATE NOW

        val myCalendar = Calendar.getInstance()

        val year = myCalendar.get(Calendar.YEAR)
        val month = myCalendar.get(Calendar.MONTH)
        val day = myCalendar.get(Calendar.DAY_OF_MONTH)

DATE obj (1970 till specified date)

     val sdf = SimpleDateFormat("dd/MM/yyyy", Locale.ENGLISH)   
     sdf.parse(selectedDate)                     
     
     !!! selectedDate is "" of dd/MM/yyyy format
        
DATE obj (1970 till now)

     val sdf = SimpleDateFormat("dd/MM/yyyy", Locale.ENGLISH) 
     sdf.parse(sdf.format(System.currentTimeMillis()))

TIME DURATION IN MS

    d!!.time                 ---- where d is Date obj



DATEPICKER        
        
        DatePickerDialog(this, DatePickerDialog.OnDateSetListener {
                view, year, month, dayOfMonth ->
                     ....code after date picked and Ok clicked ....
        }, year, month, day).show()
    }
}

    !!! year, month, day  ----- now

   ------------------------------------------------------
   calendare inactive in future

        dpd.datePicker.setMaxDate(Date().time - 86400000)
        dpd.show()

        !!! whre dpd is result of DatePickerDialog(...)

*********************************************************************************************************************
                                NEW SCREEN (ACTIVITY)   ---- js routing 

(manifests) new - Activity - Empty 

(manifests) 
    
    <activity
            android:name=".QuizQuestionsActivity"
            android:screenOrientation="portrait"
            >
    </activity>

    !!! can also add custom theme, see SETUP --- THEME

_________________________________________________________________________

BTN CLICK ->  (validation) -> NEW WINDOW 

    (.kt) 
        el-ui.setOnClickListener { 
            if(inputTxt.text.toString().isEmpty()){
                Toast.makeText(this, "Please enter your name", Toast.LENGTH_SHORT).show()
            } else {
                val intent = Intent(this, QuizQuestionsActivity::class.java)
                startActivity(intent)
                finish()
            }
        }

    !!! input -> toString
        go to page:         startActivity(intent)
        close this page:    finish()

*******************************************************************************************************************
                                    MODEL 

new class --- Question 
        
        data class Question (
            val id: Int,
            val question: String,
            ....            
        )

        !!! val image: Int    

---------------------------------------------
new file  ---- Constants                // also can use XML, json 

    object Constants {
        fun getQuestions(): ArrayList<Question> {
            val questionList = ArrayList<Question>()
            val questionOne = Question(
                id = 1,
                question = "What country is this?",                
                .....
            )
            questionList.add(questionOne)
            .....
            return questionList
        }
    }

    !!! image: R.drawable.lala            // res - drawable - lala.jpg 

------------------------------------------
Test: 
    in this activity: 
         val questionList = Constants.getQuestions()
         Log.i("Question Size:", "${questionList.size}")

    !!! start app, get to this page.... to see log: LB Logcat ---- Verbose --- search Question (Model name)


