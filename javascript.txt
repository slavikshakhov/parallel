group obj's props by one key:
        [
            {id: 1, name: 'la', age: 20},
            {id: 1, name: 'ta', age: 30},
            {id: 3, name: 'da', age: 40}
        ]
        ->  
        {
            1: [{id: 1, name: 'la', age: 20}, {id: 1, name: 'ta', age: 30}] ,
            2: [{id: 3, name: 'da', age: 40}]
        }
        npm i --save lodash
        var _ = require('lodash');
        const grouped = _.groupBy(arr, el => el.id);   

*************************************************************************************************************
                            JSON

print json beutify:  console.log(JSON.stringify(data, null, 2))

************************************************************************************************************
                            DATE

new Date().getFullYear().toString()

*************************************************************************************************************
                            ARRAYS

arr -> arr with unique vals
    [... new Set(arr)]

************************************************************************************************************
                            FETCH 

const response = await fetch(url, {
    method: 'POST', // *GET, POST, PUT, DELETE, etc.
    mode: 'cors', // no-cors, *cors, same-origin
    cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached
    credentials: 'same-origin', // include, *same-origin, omit
    headers: {
      'Content-Type': 'application/json'
      // 'Content-Type': 'application/x-www-form-urlencoded',
    },
    redirect: 'follow', // manual, *follow, error
    referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url
    body: JSON.stringify(data) // body data type must match "Content-Type" header
  });
 

postData('https://example.com/answer', { answer: 42 })
  .then(data => {
    console.log(data); // JSON data parsed by `data.json()` call
  });